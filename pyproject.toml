[project]
name = "sophia-doc"
version = "0.1.5"
description = "A python package to automatically generate API documents for Python modules."
authors = [{ name = "st1020", email = "stone_1020@qq.com" }]
license = { text = "MIT" }
readme = "README.md"
keywords = ["sophia-doc", "documentation", "doc", "pydoc", "markdown"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Documentation",
  "Topic :: Software Development",
  "Topic :: Software Development :: Documentation",
  "Topic :: Text Processing",
  "Topic :: Text Processing :: Markup",
  "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = ["docstring-parser>=0.15"]

[tool.pdm.dev-dependencies]
linting = ["black", "ruff"]

[project.urls]
Homepage = "https://github.com/st1020/sophia-doc"
Source = "https://github.com/st1020/sophia-doc"

[project.scripts]
sophia-doc = "sophia_doc.__main__:cli"

[tool.black]
target-version = ["py38", "py39", "py310", "py311"]

[tool.ruff]
line-length = 88
select = [
  "F",     # Pyflakes
  "E",     # pycodestyle errors
  "W",     # pycodestyle warnings
  "I",     # isort
  "N",     # pep8-naming
  "D",     # pydocstyle
  "UP",    # pyupgrade
  "YTT",   # flake8-2020
  "ASYNC", # flake8-async
  "S",     # flake8-bandit
  "B",     # flake8-bugbear
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "T10",   # flake8-debugger
  "FA",    # flake8-future-annotations
  "ISC",   # flake8-implicit-str-concat
  "G",     # flake8-logging-format
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "Q",     # flake8-quotes
  "RSE",   # flake8-raise
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SLOT",  # flake8-slots
  "SIM",   # flake8-simplify
  "TCH",   # flake8-type-checking
  "INT",   # flake8-gettext
  "ARG",   # flake8-unused-arguments
  "TD",    # flake8-todos
  "FIX",   # flake8-fixme
  "ERA",   # eradicate
  "PGH",   # pygrep-hooks
  "PL",    # Pylint
  "TRY",   # tryceratops
  "FLY",   # flynt
  "PERF",  # Perflint
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E501",    # Line too long, handled by black
  "S101",    # Use of assert detected
  "PGH003",  # Use specific rule codes when ignoring type issues
  "PLR0911", # Too many return statements
  "PLR0912", # Too many branches
  "PLR0913", # Too many arguments to function call
  "PERF203", # try-except within a loop incurs performance overhead
]
target-version = "py38"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"sophia_doc/__main__.py" = ["ALL"]

[tool.pyright]
pythonVersion = "3.8"
pythonPlatform = "All"

[tool.hatch.build.targets.sdist]
include = ["/README.md", "/sophia_doc"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
